https://practice.geeksforgeeks.org/problems/solve-the-sudoku-1587115621/1

bool isvalid(int row, int col, int elem, int matrix[9][9]){
        for(int i=0; i<=8; i++){
            if(matrix[i][col]==elem)return false;
            if(matrix[row][i]==elem)return false;
            int r= 3*(row/3) + i/3;
            int c= 3*(col/3) + i%3;
            if(matrix[r][c]==elem)return false;
        }
        return true;
    }
    bool SolveSudoku(int grid[N][N])  
    { 
        for(int i=0; i<9; i++){
            for(int j=0; j<9; j++){
                
                //means no value present
                if(grid[i][j]==0){
                    for(int k=1; k<=9; k++){ //try putiing everything
                        if( isvalid(i,j,k,grid) ){
                            
                         grid[i][j]=k;
                         //check for further calls ... if all valid then true
                        if(SolveSudoku(grid))return true;
                        else grid[i][j]=0; //backtrack
                        }
                        
                    }
                    return false;
                }
                
            }
        }
        return true;
    }
    
    //Function to print grids of the Sudoku.
    void printGrid (int grid[N][N]) 
    {
        for(int i=0;i<9;i++){
             for(int j=0;j<9;j++){
                 cout<<grid[i][j]<<" ";
             } 
         }
    }
